<stack:stack>

	<stack:description>
	Provides pre-execution environment (PXE) support for frontend machines.
	</stack:description>

	<stack:copyright>
	Copyright (c) 2006 - 2018 Teradata
	All rights reserved. Stacki(r) v5.x stacki.com
	https://github.com/Teradata/stacki/blob/master/LICENSE.txt
	</stack:copyright>

        <stack:rocks>
        Copyright (c) 2000 - 2010 The Regents of the University of California
        All rights reserved. Rocks(r) v5.4 www.rocksclusters.org
        https://github.com/Teradata/stacki/blob/master/LICENSE-ROCKS.txt
        </stack:rocks>


	<stack:package>
		stack-pxeboot
		syslinux
		xinetd
	</stack:package>

	<stack:package stack:cond="os == 'redhat'">
		memtest86+
		stack-images
		tftp-server
	</stack:package>

	<stack:package stack:cond="os == 'sles'">
		stack-pxeboot
		stack-sles-images
		tftp
	</stack:package>


<stack:script stack:stage="install-post">
<stack:file stack:name="/etc/xinetd.d/tftp">
service tftp
{
        socket_type             = dgram
        protocol                = udp
        wait                    = yes
        user                    = root
        server                  = /usr/sbin/in.tftpd
        server_args             = --verbose --secure /tftpboot/pxelinux
        instances               = 1
	per_source		= 11
	cps			= 1000 2
	flags			= IPv4
        disable                 = no
}
</stack:file>
/usr/bin/systemctl enable xinetd

mkdir -p /tftpboot/pxelinux
cp /opt/stack/images/vmlinuz* /tftpboot/pxelinux/
cp /opt/stack/images/initrd*  /tftpboot/pxelinux/

<!-- copy all the syslinux programs to the pxelinux directory -->
cp -R /usr/share/syslinux/* /tftpboot/pxelinux/

mkdir -p /tftpboot/pxelinux/pxelinux.cfg
chown root.apache /tftpboot/pxelinux/pxelinux.cfg
chmod 775 /tftpboot/pxelinux/pxelinux.cfg
</stack:script>


<stack:script stack:cond="os == 'redhat'" stack:stage="install-post">
cp /boot/memtest86* /tftpboot/pxelinux/memtest
</stack:script>

</stack:stack> 
